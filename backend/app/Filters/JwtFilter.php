<?php\nnamespace App\Filters;\n\nuse CodeIgniter\HTTP\RequestInterface;\nuse CodeIgniter\HTTP\ResponseInterface;\nuse CodeIgniter\Filters\FilterInterface;\nuse Firebase\JWT\JWT;\nuse Firebase\JWT\Key;\nuse Config\Services;\n\nclass JwtFilter implements FilterInterface\n{\n    public function before(RequestInterface $request, $arguments = null)\n    {\n        $header = $request->getServer('HTTP_AUTHORIZATION');\n        if (!$header) {\n            return Services::response()->setStatusCode(401)->setJSON(['error'=>'Missing Authorization header']);\n        }\n        if (preg_match('/Bearer\\s+(.*)$/i', $header, $matches)) {\n            $token = $matches[1];\n        } else {\n            return Services::response()->setStatusCode(401)->setJSON(['error'=>'Malformed Authorization header']);\n        }\n\n        $key = getenv('JWT_SECRET') ?: 'change_this_secret';\n        try {\n            $decoded = JWT::decode($token, new Key($key, 'HS256'));\n            // attach user data if required\n        } catch (\\Exception $e) {\n            return Services::response()->setStatusCode(401)->setJSON(['error'=>'Invalid token: '.$e->getMessage()]);\n        }\n    }\n\n    public function after(RequestInterface $request, ResponseInterface $response, $arguments = null)\n    {\n        // no-op\n    }\n}\n